#include "G4HCofThisEvent.hh"
#include "G4Step.hh"
#include "G4ThreeVector.hh"
#include "G4SDManager.hh"
#include "G4ios.hh"
#include "G4UnitsTable.hh"
#include <cmath>
#include <math.h>
#include <TMath.h>
#include <iostream>
#include <TH1.h>
#include <TH2.h>
#include <TFile.h>
#include <TStyle.h>
#include "TRandom.h"
#include <vector>
#include <cstdlib>
#include "DAQManager.hh"
#include "InputManager.hh"

#include <fstream>
using namespace std;

#ifndef TrackerSD_h
#define TrackerSD_h 1

#include "G4VSensitiveDetector.hh"
#include "TrackerHit.hh"

class G4Step;
class G4HCofThisEvent;

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

class TrackerSD : public G4VSensitiveDetector {

  public:
         
  TrackerSD(G4String, DAQManager* DAQMgr, InputManager* InMgr);
 ~TrackerSD();

  void Initialize(G4HCofThisEvent*);
  G4bool ProcessHits(G4Step*, G4TouchableHistory*);
  void EndOfEvent(G4HCofThisEvent*);
  G4int round(double);
  double Gaus(double mean, double sigma);

  private:

  TrackerHitsCollection* trackerCollection;
  G4String HCname;
  G4StepPoint* point;
  G4String pos;
  G4double edep;
  G4double Emax;
  G4ThreeVector  location;
  G4int eventno;
  G4int copynum;

  DAQManager* DAQMgr;

};

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

#endif

